alias master="git checkout master && git pull"
alias develop="git checkout develop && git pull"
alias branches="git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'"
alias cleanBranches="git fetch --all -p; git branch -vv | grep ": gone]" | awk '{ print $1 }' | xargs -n 1 git branch -D"

alias gfl="git flow"

function HELPER_git_commit_w_changelog() {
    git commit -m "$1: ${@:2}"
}

alias featCommit="HELPER_git_commit_w_changelog feat"
alias fixCommit="HELPER_git_commit_w_changelog fix"
alias docsCommit="HELPER_git_commit_w_changelog docs"
alias styleCommit="HELPER_git_commit_w_changelog style"
alias perfCommit="HELPER_git_commit_w_changelog perf"
alias testCommit="HELPER_git_commit_w_changelog test"
alias buildCommit="HELPER_git_commit_w_changelog build"
alias refactorCommit="HELPER_git_commit_w_changelog refactor"
alias revertCommit="HELPER_git_commit_w_changelog revert"
alias ciCommit="HELPER_git_commit_w_changelog ci"
alias choreCommit="HELPER_git_commit_w_changelog chore"
alias testCommit="HELPER_git_commit_w_changelog test"

function HELPER_setup_github_apps() {
  if [[ ! -d "./.git" ]] ; then 
    echo "ERROR: Can only setup github apps for a project with git in root."
    echo "Please move to git project root"
    return 1
  fi

  if [[ -d "./.github" ]] ; then 
    echo "Github apps already present. Exiting"
    return 0
  fi 

  mkdir -p .github
  cp ~/.github_app_defaults/* .github/

  if [[ ! -f .restyled.yaml ]] ; then 
    cp .github/restyled.yml .restyled.yaml
  fi 

  rm .github/restyled.yaml

  git add .github/*
  git add .restyled.yaml
  featCommit "Adding github app configurations"

  echo "Github apps configured"
}
